.libPaths("F:/R")
?gsub
library(xergm)
data('sampson')
model <- ergm(n ~ edges + mutual + nodematch('group') +
gwesp(alpha = .5, fixed = TRUE) +
gwidegree(decay = 1, fixed = TRUE))
model <- ergm(samplike ~ edges + mutual + nodematch('group') +
gwesp(alpha = .5, fixed = TRUE) +
gwidegree(decay = 1, fixed = TRUE))
model <- ergm(samplike ~ edges + mutual + nodematch('group') +
gwesp(decay = .5, fixed = TRUE) +
gwidegree(decay = 1, fixed = TRUE))
library(texreg)
screenreg(model)
htmlreg(model,file="ERGM_EXAMPLE_MODEL.doc",
custom.model.names ="ERGM example",
digits=5,bold=TRUE)
source("htmlreg_convert_function.R")
source("htmlreg_convert_function.R")
htmlreg_convert("ERGM_EXAMPLE_MODEL.doc","xlsx")
htmlreg_convert("ERGM_EXAMPLE_MODEL.doc", "csv")
doc<-"ERGM_EXAMPLE_MODEL.doc"
NAME1<-gsub(".doc",".xlsx",doc)
NAME2<-gsub(".doc",".csv",doc)
complx <- docxtractr::read_docx(doc) #Read .doc created using htmlreg
library(docxtractr)
complx <- docxtractr::read_docx(doc) #Read .doc created using htmlreg
complx <- docxtractr::read_docx("ERGM_EXAMPLE_MODEL.doc") #Read .doc created using htmlreg
install.packages("textreadr")
library(textreadr)
read_document(doc)
H<-read_document(doc)
H<-read_document("ERGM_EXAMPLE_MODEL.doc")
H<-read_html("ERGM_EXAMPLE_MODEL.doc")
??docxtractr
H
H1<-as.data.frame(H)
View(H1)
doc<-"ERGM_EXAMPLE_MODEL.docx"
complx <- docxtractr::read_docx("ERGM_EXAMPLE_MODEL.doc") #Read .doc created using htmlreg
doc<-"ERGM_EXAMPLE_MODEL.docx"
complx <- docxtractr::read_docx("ERGM_EXAMPLE_MODEL.doc") #Read .doc created using htmlreg
complx <- docxtractr::read_docx("ERGM_EXAMPLE_MODEL.docx") #Read .doc created using htmlreg
devtools::install_github('R2DOC', 'davidgohel')
devtools::install_github('davidgohel/R2DOC')
devtools::install_github('davidgohel/R2DOCX')
htmlreg_convert<-function(doc,format){
NAME1<-gsub(".doc",".xlsx",doc)
NAME2<-gsub(".doc",".csv",doc)
complx <- docxtractr::read_docx("ERGM_EXAMPLE_MODEL.docx") #Read .doc created using htmlreg
TABLE_XLS<-docxtractr::docx_extract_tbl(complx, 1, header=TRUE)
if (format=="xlsx"){
openxlsx::write.xlsx(TABLE_XLS,NAME1)
}else write.csv(TABLE_XLS,NAME2)
}
htmlreg_convert("ERGM_EXAMPLE_MODEL.doc","xlsx")
htmlreg_convert("ERGM_EXAMPLE_MODEL.doc", "csv")
.libPaths("F:/R")
